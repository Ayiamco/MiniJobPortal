
@model inSpark.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="c-form-con">
    <div class="c-form-section">
        <h2 class="text-center " style="margin-bottom:1em"> Applicants Registration Form</h2>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="c-form-row">
                <div class="c-form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "c-form-label" })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control  c-form-input " } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="c-form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "c-form-label" })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control  c-form-input" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="c-form-row">
                <div class="c-form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "c-form-label " })
                    <div class="c-form-group-el">
                        <select id="cars" name="Gender" class="form-control  c-form-input" required>
                            <option>Select Gender</option>
                            <option value="Male">Female</option>
                            <option value="Male">Male</option>

                        </select>
                    </div>
                </div>
                <div class="c-form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "c-form-label " })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control  c-form-input" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="c-form-row">
                <div class="c-form-group-1">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "c-form-label " })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control  c-form-input" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="c-form-row">
                <div class="c-form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "c-form-label " })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control  c-form-input" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="c-form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "c-form-label " })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control  c-form-input" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="c-form-row">
                <div class="c-form-group">
                    <label class="c-form-label ">Upload Picture (Max size: 20kb )</label>
                    <div class="c-form-group-el">
                        <input type="file" name="ProfilePicture" accept="application/jpg,application/png, .jpg,.png" required />
                    </div>
                </div>
                <div class="c-form-group">
                    <label class="c-form-label ">Upload Resume</label>
                    <div class="c-form-group-el">
                        <input type="file" name="Resume" accept="application/pdf, .pdf" required />
                    </div>
                </div>
            </div>

            <div class="c-form-btn ">
                <button type="submit" class="btn-primary btn">Register</button>
            </div>
        }
    </div>
</div>










