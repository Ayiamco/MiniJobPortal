@model inSpark.Dtos.JobFormViewModel

@{
    ViewBag.Title = "New Job";
    string date=Model == null ? "" : Model.DeadLine.ToString("d");
    string btnText = date == "" ? "Create New" : "Update";
    string rejectionMessage = Model == null ? "" : Model.RejectionMailMessage;
    string acceptanceMessage=Model == null ? "" : Model.AcceptanceMailMessage;
    
}

<h2 class="text-center" style="margin-bottom : 30px">@btnText Job Position</h2>

@using (Html.BeginForm("SaveJob", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            <input type="datetime" value="@date" name="DeadLine" class="form-control" />
            @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-5" name="JobRequirements">Upload Job Requirement</label>
        <div class="col-md-5">
            <input type="file" name="JobRequirement" accept="application/pdf, .pdf" required />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MailSalutation, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MailSalutation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MailSalutation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AcceptanceMailMessage, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            <textarea style="resize:none" class="form-control input-lg" rows="5" name="AcceptanceMailMessage" required>
            </textarea>
            @Html.ValidationMessageFor(model => model.AcceptanceMailMessage, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RejectionMailMessage, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            <textarea style="resize:none" class="form-control input-lg" rows="5" name="RejectionMailMessage" required>
            </textarea>
            @Html.ValidationMessageFor(model => model.RejectionMailMessage, "", new { @class = "text-danger" })
        </div>
    </div>
    <button type="submit"  class="btn btn-primary">@btnText Job</button>

</div>
}


