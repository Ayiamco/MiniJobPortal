@model inSpark.Dtos.JobFormViewModel
@using inSpark.Infrastructure.Services
@{
    ViewBag.Title= String.IsNullOrWhiteSpace(Model.Id) ? "Add Job" : "Update Job";
    string btnText = String.IsNullOrWhiteSpace(Model.Id) ? "Create New" : "Update";
    string date =  btnText== "Create New" ? "" : Model.DeadLine.ToString("d");
    string rejectionMessage = Model.RejectionMailMessage == null ? "" : Model.RejectionMailMessage.Trim();
    string acceptanceMessage = Model.AcceptanceMailMessage == null ? "" : Model.AcceptanceMailMessage.Trim();

}


<div class="c-form-con">
    <div class="c-form-section">
        <h2 class="text-center" style="margin-bottom:1em">@btnText Job Position</h2>
        @using (Html.BeginForm("SaveJob", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id);
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="c-form-row">
                <div class="c-form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "c-form-label" })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control c-form-input" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="c-form-group">
                    @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "c-form-label" })
                    <div class="c-form-group-el">
                        <input type="datetime" value="@date" name="DeadLine" class="form-control c-form-input" />
                         @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="c-form-row">
                <div class="c-form-group">
                    <label class="c-form-label" name="JobRequirements">Upload Job Requirement</label>
                    <div class="c-form-group-el">
                        <input type="file" class="form-control c-form-input" id="jobfile-upload" name="JobRequirement" accept="application/pdf, .pdf" required />
                    </div>
                </div>
                <div class="c-form-group">
                    @Html.LabelFor(model => model.MailSalutation, htmlAttributes: new { @class = "c-form-label" })
                    <div class="c-form-group-el">
                        @Html.EditorFor(model => model.MailSalutation, new { htmlAttributes = new { @class = "form-control c-form-input" } })
                         @Html.ValidationMessageFor(model => model.MailSalutation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="c-form-row">
                <div class="c-form-group">
                    @Html.LabelFor(model => model.AcceptanceMailMessage, htmlAttributes: new { @class = "c-form-label" })
                    <div class="c-form-group-el">
                        <textarea style="resize:none" class="form-control c-form-input" rows="5" name="AcceptanceMailMessage" required>@acceptanceMessage</textarea>
                        <div>
                            @Html.ValidationMessageFor(model => model.AcceptanceMailMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="c-form-group">
                    @Html.LabelFor(model => model.RejectionMailMessage, htmlAttributes: new { @class = "c-form-label" })
                    <div class="c-form-group-el">
                        <textarea style="resize:none" class="form-control c-form-input" rows="5" name="RejectionMailMessage" required>@rejectionMessage</textarea>
                        @Html.ValidationMessageFor(model => model.RejectionMailMessage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="c-form-btn ">
                <button type="submit" class="btn-primary btn">@btnText Job</button>
            </div>

        }
    </div>
</div>


        


