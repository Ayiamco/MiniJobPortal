@model inSpark.Models.ViewModels.JobFormViewModel

@{
    ViewBag.Title = "CreateJob";
    string date = @Model.DeadLine.ToString("d");
    string btnText = "Create New";
    
}
@if (Model.Id != new Guid())
{
    btnText = "Update";
}
<h2 class="text-center" style="margin-bottom : 30px">@btnText Job Position</h2>

@using (Html.BeginForm("SaveJob","Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <input name="Id" value="@Model.Id" hidden/>
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            <input type="datetime" value="@date" name="DeadLine" class="form-control" />
            @*@Html.EditorFor(model => model.DeadLine.ToString("d"), new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-5" name="JobRequirements">Upload Job Requirement</label>
        <div class="col-md-5">
            <input type="file" name="JobRequirement" accept="application/pdf, .pdf" required />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MailSalutation, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MailSalutation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MailSalutation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AcceptanceMailMessage, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            <textarea style="resize:none" class="form-control input-lg" rows="5" name="AcceptanceMailMessage" required>@Model.AcceptanceMailMessage</textarea>
            @*@Html.TextBoxFor(model => model.AcceptanceMailMessage, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.AcceptanceMailMessage, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RejectionMailMessage, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            <textarea style="resize:none" class="form-control input-lg" rows="5" name="RejectionMailMessage"  required>@Model.RejectionMailMessage</textarea>
           @* @Html.TextBoxFor(model => model.RejectionMailMessage, new { htmlAttributes = new { @class = "form-control input-lg" } })*@
            @Html.ValidationMessageFor(model => model.RejectionMailMessage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-5  ">
            <input type="submit" value="@btnText Job" class="btn btn-primary" />
        </div>
    </div>
</div>
}


