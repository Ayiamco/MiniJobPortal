@model inSpark.Models.ViewModels.ApplicantsViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = @Model.Job.Title;
    int notReviewedCount = Model.AllApplicants
        .Where(X => X.ApplicationStatus == @inSpark.Infrastructure.Services.JobApplicationResponse.NotReviewed)
        .Count();
    int NoRejected = Model.AllApplicants
        .Where(X => X.ApplicationStatus == @inSpark.Infrastructure.Services.JobApplicationResponse.Rejected)
        .Count();
    int NoAccepted = Model.AllApplicants
        .Where(X => X.ApplicationStatus == @inSpark.Infrastructure.Services.JobApplicationResponse.Accepted)
        .Count();
}

<h2 class="text-center">Job: @Model.Job.Title</h2>

<div class="job-info">
    <div class="job-info-card">
        <div class="job-info-desc">
            <p>Total</p>
            <i class="fas fa-users " style="color:blue"></i>

        </div>

        <p id="info-card-number">@Model.AllApplicants.Count()</p>
    </div>
    <div class="job-info-card">
        <div class="job-info-desc">
            <p>Approved </p>
            <i class="fas fa-check " style="color:blue"></i>

        </div>
        <p id="info-card-number">@NoAccepted</p>
    </div>
    <div class="job-info-card">
        <div class="job-info-desc">
            <p>Declined </p>
            <i class="fas fa-times" style="color: rgb(172, 34, 34)"></i>
        </div>
        <p id="info-card-number">@NoRejected</p>
    </div>
    <div class="job-info-card">
        <div class="job-info-desc">
            <p>Not Reviewed</p>
            <i class="fas fa-user-clock" style="color:blue"></i>
        </div>
        <p id="info-card-number">@notReviewedCount</p>
    </div>
    <div class="job-info-card">
        <div class="job-info-desc">
            <p>Job  DeadLine</p>
            <i class="far fa-calendar-alt" style="color:blue"></i>
        </div>

        <p id="info-card-number">@Model.Job.DeadLine.ToString("d") </p>
    </div>
</div>



@if (@Model.AllApplicants == null)
{
    <p class="text-danger">No Applicants For Job yet.</p>
}

@*<div class="card" style="width: 18rem;">
    <img class="card-img-top" src="~/FileStorage/ProfilePictureFiles/IMG-20190103-WA0003204857639.jpg" alt="Card image cap">
    <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
        <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
</div>*@

<div id="filter-section">
    @using (Html.BeginForm("GetApplicants", "Admin", FormMethod.Get))
    {
        <div class="form-group ">
            <div class="">
                <input id="search" type="text" name="searchParam" class="form-control" placeholder="Enter Applicant Name..." value="@ViewBag.SearchParam" />
            </div>
            <div class="">
                <input type="submit" value="Search By Name" class="btn btn-primary" />
            </div>
            <input id="searchFilterParam" name="filterParam" value="@ViewBag.FilterParamSearch" hidden />
            <input name="jobId" value="@Model.Job.Id" hidden required />
        </div>
    }

    @using (Html.BeginForm("GetApplicants", "Admin", FormMethod.Get))
    {
        <div class="form-group ">
            <div class="">
                <select id="filter" class="form-control" name="filterParam" value="@ViewBag.FilterParam" style="margin-right: 5px" required>
                    <option> @ViewBag.FilterParam</option>
                    <option value="@inSpark.Infrastructure.Services.JobApplicationResponse.Rejected">Rejected Application Only</option>
                    <option value="@inSpark.Infrastructure.Services.JobApplicationResponse.Accepted">Accepted Only</option>
                    <option value="@inSpark.Infrastructure.Services.JobApplicationResponse.NotReviewed">Not Reviewed Only</option>
                </select>
            </div>

            <div class="">
                <input type="submit" value="Filter Applications" class="btn btn-primary" />
            </div>
            <input id="filterSearchParam" name="searchParam" value="@ViewBag.SearchParam" hidden />
            <input name="jobId" value="@Model.Job.Id" hidden required />
        </div>
    }


</div>

<div class="div-padded table-fullpage">
    <table class="table table-striped table-bordered table-responsive ">
        <tr>
            <th>Applicant Name</th>
            <th>Review Status</th>
        </tr>
        @if (Model.ApplicantsInPage != null)
        {
            foreach (var item in Model.ApplicantsInPage)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.User.FullName, "ViewApplicant", "Admin", new
                        {
                            applicantId = item.UserId
                   ,
                            jobId = item.JobId
                        }, null)
                    </td>
                    <td>
                        @item.ApplicationStatus
                    </td>
                </tr>
            }

        }


    </table>
    @if (Model.ApplicantsInPage.Count() == 0)
    {
        <p class="text-danger text-center"> No Applicant matches your search</p>
    }
    @Html.PagedListPager(Model.ApplicantsInPage, i => Url.Action("GetApplicants", "Admin",
        new
            {
                jobId = @Model.Job.Id,
                i,
                searchParam = Request.QueryString["searchParam"],
            filterParam = Request.QueryString["filterParam"]
        }))
</div>
@section scripts {
    <script type="text/javascript" src="~/Content/js/JobApplicantsList.js">

    </script>
}
